Checks: '-*,huawei-force-type-void,cppcoreguidelines-pro-type-cstyle-cast,huawei-use-nullptr,huawei-non-const-parameter,huawei-use-using,modernize-use-noexcept,huawei-non-const-references-parameter,huawei-BugproneLambda,huawei-expression-line-break,huawei-default-arguments,modernize-use-auto,huawei-copy-construct-assign-consistent,readability-braces-around-statements,huawei-use-default-capture-in-lambda,huawei-forbid-redefine-inherited-non-virtual-method,huawei-identifier-naming,huawei-forbidden-std-move-on-const-object,huawei-pro-type-member-init,huawei-global-variable-and-function,huawei-base-destructor-should-be-virtual,huawei-not-hold-pointer-from-string-cstr,huawei-self-contained-header,huawei-include-order,huawei-use-equals-delete,modernize-use-override,readability-function-size,huawei-header-guard,huawei-move-construct-assign-consistent,huawei-undefined-memory-manipulation,huawei-lambda-capture-default-captures-this,huawei-macro-define-not-const,modernize-deprecated-headers,cppcoreguidelines-pro-type-reinterpret-cast,huawei-explicit-constructor,huawei-header-file-cyclic-depended,huawei-member-function-could-be-const,cppcoreguidelines-pro-type-member-init,cppcoreguidelines-pro-type-const-cast'
CheckOptions:
- { key: huawei-identifier-naming.StructCase, value: 'CamelCase' }
- { key: huawei-identifier-naming.FunctionCase, value: 'CamelCase' }
- { key: huawei-identifier-naming.EnumCase, value: 'CamelCase' }
- { key: huawei-identifier-naming.UnionCase, value: 'CamelCase' }

- { key: huawei-identifier-naming.GlobalVariableCase, value: 'camelBack' }
- { key: huawei-identifier-naming.LocalVariableCase, value: 'camelBack' }
- { key: huawei-identifier-naming.ParameterCase, value: 'camelBack' }
- { key: huawei-identifier-naming.StaticVariableCase, value: 'camelBack' }

- { key: huawei-identifier-naming.MacroDefinitionCase, value: 'UPPER_CASE' }
- { key: huawei-identifier-naming.GlobalConstantCase, value: 'UPPER_CASE' }
- { key: huawei-identifier-naming.EnumConstantCase, value: 'UPPER_CASE' }
- { key: huawei-identifier-naming.ConstantParameterCase, value: 'camelBack' }
- { key: huawei-identifier-naming.GlobalVariablePrefix, value: 'g_' }

- { key: readability-function-size.LineThreshold,              value: 50         }
- { key: readability-function-size.ParameterThreshold,         value: 5          }
- { key: readability-function-size.NestingThreshold,           value: 4          }

- { key: huawei-header-guard.HeaderFileExtensions,    value: 'h,hh,hpp,hxx,inc,ph'   }
- { key: huawei-header-guard.ProjectRootPath,  value: 'D:\_project\AVPipeline\code\TAG-2021-06-10-2213\huawei-avpipeline-android-cpp-demo' }

- { key: huawei-identifier-naming.MemberCase, value: camelBack }
- { key: huawei-identifier-naming.ParameterThreshold, value: 5 }
- { key: huawei-identifier-naming.MethodCase, value: CamelCase }
- { key: huawei-identifier-naming.ClassCase, value: CamelCase }
- { key: huawei-identifier-naming.NestingThreshold, value: 4 }
- { key: huawei-identifier-naming.LineThreshold, value: 50 }
HeaderFilterRegex: '^D:[\\|/]_project[\\|/]AVPipeline[\\|/]code[\\|/]TAG-2021-06-10-2213[\\|/]huawei-avpipeline-android-cpp-demo[\\|/].*'
FormatStyle: google