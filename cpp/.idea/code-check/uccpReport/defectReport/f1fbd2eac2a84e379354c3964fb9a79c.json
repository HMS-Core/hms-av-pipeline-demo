{"status":"success","errorMsg":"","defects":[{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"bfe630a9-f68d-4f01-b1d1-c79fdbd8071b","defectLevel":"warning","defectType":"huawei-macro-define-not-const","analyzerName":"clangtidy","description":"Macros are not allowed to represent constants.","mainBuggyLine":14,"mainBuggyCode":"#define LOG_TAG \"avp-cppdemo\" ","codeContextStartLine":12,"codeContext":"\n#undef LOG_TAG\n#define LOG_TAG \"avp-cppdemo\"\n#define ALOGD(...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)\n#define ALOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)","mergeKey":null,"extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"9da9562b-8bd7-46b9-a89b-db4b9271bd20","defectLevel":"method","defectType":"huge_method","analyzerName":"cmetrics","description":"the nbnc line of the method {TestSoundDetect()} is 68, it is over 50","mainBuggyLine":49,"mainBuggyCode":"void TestSoundDetect(string path) {","codeContextStartLine":47,"codeContext":"}\n\nvoid TestSoundDetect(string path) {\n    MediaMetaSP meta = MediaMeta::Create();\n    if (meta == nullptr) {","mergeKey":null,"extra":"cmetrics{\"methodName\":\"TestSoundDetect()\",\"realVal\":68,\"modifiedThreshold\":50,\"supposeNew\":false}","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"d10e5ec1-45a5-47c8-9be6-181880aa9836","defectLevel":"","defectType":"C_RULE_ID_MAGICNUMBER","analyzerName":"fixbotengine-cxx","description":"Do not use magic numbers.The number is 32000","mainBuggyLine":57,"mainBuggyCode":"    meta->SetValue<int32_t>(MEDIA_ATTR_SAMPLE_RATE, 32000);","codeContextStartLine":55,"codeContext":"    meta->SetValue<string>(MEDIA_GRAPH_PATH, path + \"/SedPipeline.xml\");\n    meta->SetValue<string>(MEDIA_ASSETS_PATH_PREFIX, path + \"/sed.om\");\n    meta->SetValue<int32_t>(MEDIA_ATTR_SAMPLE_RATE, 32000);\n    meta->SetValue<int32_t>(MEDIA_ATTR_CHANNEL_COUNT, 1);\n    meta->SetValue<int32_t>(MEDIA_ATTR_SAMPLE_FORMAT, 1); // AV_SAMPLE_FMT_S16","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"1fc67b70-bfe7-45d9-8ee6-10cc2621fde2","defectLevel":"","defectType":"C_RULE_ID_FUNCTION_SIZE","analyzerName":"fixbotengine-cxx","description":"Avoid long functions and ensure that functions contain no more than 50 lines (not including blank lines and comments).Function has 67 lines.","mainBuggyLine":49,"mainBuggyCode":"void TestSoundDetect(string path) {","codeContextStartLine":47,"codeContext":"}\n\nvoid TestSoundDetect(string path) {\n    MediaMetaSP meta = MediaMeta::Create();\n    if (meta == nullptr) {","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"dfe8c73d-2bab-4e0f-a912-7709f0d900ad","defectLevel":"","defectType":"C_RULE_ID_KR_STYLE","analyzerName":"fixbotengine-cxx","description":"The left brace of the function should start a new line.[K&R Style]","mainBuggyLine":24,"mainBuggyCode":"    void OnMessage(int msg, int param1, int param2, MediaParcelSP) override {","codeContextStartLine":22,"codeContext":"\nstruct EventListener : MMListener {\n    void OnMessage(int msg, int param1, int param2, MediaParcelSP) override {\n        if (msg == INode::EVENT_INFO) {\n            switch (param1) {","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[{"afterFixCode":"    void OnMessage(int msg, int param1, int param2, MediaParcelSP) override\r\n    {","beforeFixCode":"    void OnMessage(int msg, int param1, int param2, MediaParcelSP) override {","endCharacter":0,"endLineNumber":24,"filePath":"D:\\_project\\AVPipeline\\code\\TAG-2021-06-10-2213\\huawei-avpipeline-android-cpp-demo\\app\\src\\main\\cpp\\native-lib.cpp","startCharacter":0,"startingLineNumber":24,"type":"MODIFIED","desc":""}]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"f16fc0a9-8438-43c1-9e03-4f1c4120ed95","defectLevel":"","defectType":"C_RULE_ID_KR_STYLE","analyzerName":"fixbotengine-cxx","description":"The left brace of the function should start a new line.[K&R Style]","mainBuggyLine":49,"mainBuggyCode":"void TestSoundDetect(string path) {","codeContextStartLine":47,"codeContext":"}\n\nvoid TestSoundDetect(string path) {\n    MediaMetaSP meta = MediaMeta::Create();\n    if (meta == nullptr) {","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[{"afterFixCode":"void TestSoundDetect(string path)\r\n{","beforeFixCode":"void TestSoundDetect(string path) {","endCharacter":0,"endLineNumber":49,"filePath":"D:\\_project\\AVPipeline\\code\\TAG-2021-06-10-2213\\huawei-avpipeline-android-cpp-demo\\app\\src\\main\\cpp\\native-lib.cpp","startCharacter":0,"startingLineNumber":49,"type":"MODIFIED","desc":""}]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"2fe193fc-cd3e-4e8f-bbfb-9c9637f49562","defectLevel":"","defectType":"C_RULE_ID_CORRESPONDING_HEADER","analyzerName":"fixbotengine-cxx","description":"Each .cpp file should have a .h file with the same name. It should be used to declare the classes and interfaces that need to be exposed externally.","mainBuggyLine":1,"mainBuggyCode":"#include <jni.h>","codeContextStartLine":1,"codeContext":"#include <jni.h>\n#include <string>\n#include <fstream>","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"49828dec-5c08-46b0-ba5d-3c2197c7f64e","defectLevel":"","defectType":"CPP_RULE_ID_NO_USE_SHAREDPTR","analyzerName":"fixbotengine-cxx","description":"Use unique_ptr instead of shared_ptr.","mainBuggyLine":75,"mainBuggyCode":"    using CreateMediaFilterFunc = shared_ptr<MediaFilter>(*)(const MediaMetaSP &meta);","codeContextStartLine":73,"codeContext":"    }\n    ALOGI(\"get symbol succ\");\n    using CreateMediaFilterFunc = shared_ptr<MediaFilter>(*)(const MediaMetaSP &meta);\n    auto fun = reinterpret_cast<CreateMediaFilterFunc>(sym);\n    shared_ptr<MediaFilter> mFilter = fun(meta);","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"aa029bd8-50bc-4b52-af61-5488f4d8d9c3","defectLevel":"","defectType":"CPP_RULE_ID_NO_USE_SHAREDPTR","analyzerName":"fixbotengine-cxx","description":"Use unique_ptr instead of shared_ptr.","mainBuggyLine":77,"mainBuggyCode":"    shared_ptr<MediaFilter> mFilter = fun(meta);","codeContextStartLine":75,"codeContext":"    using CreateMediaFilterFunc = shared_ptr<MediaFilter>(*)(const MediaMetaSP &meta);\n    auto fun = reinterpret_cast<CreateMediaFilterFunc>(sym);\n    shared_ptr<MediaFilter> mFilter = fun(meta);\n    if (mFilter == nullptr) {\n        ALOGE(\"create MediaFilter failed\");","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"7b2e5359-1161-463d-a6ee-3308a52c6f7c","defectLevel":"","defectType":"C_RULE_ID_FILE_HEAD_COMMENT","analyzerName":"fixbotengine-cxx","description":"File header comments must contain the copyright notice.The copyright notice are null.","mainBuggyLine":1,"mainBuggyCode":"#include <jni.h>","codeContextStartLine":1,"codeContext":"#include <jni.h>\n#include <string>\n#include <fstream>","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[{"afterFixCode":"/*\r\n * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.\r\n */\r\n#include <jni.h>","beforeFixCode":"#include <jni.h>","endCharacter":0,"endLineNumber":1,"filePath":"D:\\_project\\AVPipeline\\code\\TAG-2021-06-10-2213\\huawei-avpipeline-android-cpp-demo\\app\\src\\main\\cpp\\native-lib.cpp","startCharacter":0,"startingLineNumber":1,"type":"MODIFIED","desc":""}]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"ad49f1d5-7cb5-496e-ae47-5078c2165bcd","defectLevel":"","defectType":"CPP_RULE_ID_SMARTPOINTER_INSTEADOF_ORIGINPOINTER","analyzerName":"fixbotengine-cxx","description":"Use smart pointers instead of a raw pointer to manage resources.","mainBuggyLine":95,"mainBuggyCode":"    auto *data = new char[size];","codeContextStartLine":93,"codeContext":"    ifstream fs(pcmPath, ios::in | ios::binary);\n    static constexpr int size = 20 * 32000 / 1000 * sizeof(int16_t);\n    auto *data = new char[size];\n    fs.read(data, size);\n    MediaBufferSP mediaBuf = MediaBuffer::Create(MediaBuffer::BT_RawAudio);","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]},{"buggyFilePath":"app/src/main/cpp/native-lib.cpp","bugId":"ec047a37-24ac-41aa-8989-609ba37a6eda","defectLevel":"","defectType":"CPP_RULE_ID_FUN_PARA_POINTER_DETECT","analyzerName":"fixbotengine-cxx","description":"Use smart pointers instead of a raw pointer to manage resources.","mainBuggyLine":37,"mainBuggyCode":"bool ReleaseOutputBuffer(const MediaBuffer *mediaBuffer)","codeContextStartLine":35,"codeContext":"};\n\nbool ReleaseOutputBuffer(const MediaBuffer *mediaBuffer)\n{\n    uint8_t *buffer = nullptr;","mergeKey":"","extra":"","language":"c++","ruleUrl":null,"functionName":null,"engine":null,"category":null,"subcategory":null,"issueType":null,"cwe":null,"events":[],"fixCode":[]}]}